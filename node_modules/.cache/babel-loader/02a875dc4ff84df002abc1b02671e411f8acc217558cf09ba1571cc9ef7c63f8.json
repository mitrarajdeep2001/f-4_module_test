{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// Define the asynchronous thunk action using createAsyncThunk\nexport const fetchPosts = createAsyncThunk(\"post/fetchPosts\", async () => {\n  const res = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n  const data = await res.json();\n  return data;\n});\n\n// Create a slice using createSlice\nexport const postsSlice = createSlice({\n  name: \"posts\",\n  initialState: {\n    data: [],\n    loading: false,\n    error: null,\n    ite\n  },\n  reducers: {\n    addItemData: (state, action) => {\n      state.itemData = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchPosts.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchPosts.fulfilled, (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n    }).addCase(fetchPosts.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    });\n  }\n});\n\n// Extract the reducer and the action creator\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchPosts","res","fetch","data","json","postsSlice","name","initialState","loading","error","ite","reducers","addItemData","state","action","itemData","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","message","reducer"],"sources":["C:/Users/rajde/OneDrive/Documents/Contest/f-4_module_test/src/Store/Slices.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// Define the asynchronous thunk action using createAsyncThunk\r\nexport const fetchPosts = createAsyncThunk(\"post/fetchPosts\", async () => {\r\n  const res = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\r\n  const data = await res.json();\r\n  return data;\r\n});\r\n\r\n// Create a slice using createSlice\r\nexport const postsSlice = createSlice({\r\n  name: \"posts\",\r\n  initialState: {\r\n    data: [],\r\n    loading: false,\r\n    error: null,\r\n    ite\r\n  },\r\n  reducers: {\r\n    addItemData: (state, action) => {\r\n      state.itemData = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchPosts.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchPosts.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.data = action.payload;\r\n      })\r\n      .addCase(fetchPosts.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\n// Extract the reducer and the action creator\r\nexport default postsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;;AAEhE;AACA,OAAO,MAAMC,UAAU,GAAGD,gBAAgB,CAAC,iBAAiB,EAAE,YAAY;EACxE,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;EACrE,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;EAC7B,OAAOD,IAAI;AACb,CAAC,CAAC;;AAEF;AACA,OAAO,MAAME,UAAU,GAAGP,WAAW,CAAC;EACpCQ,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZJ,IAAI,EAAE,EAAE;IACRK,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE,IAAI;IACXC;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACE,QAAQ,GAAGD,MAAM,CAACE,OAAO;IACjC;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACnB,UAAU,CAACoB,OAAO,EAAGP,KAAK,IAAK;MACtCA,KAAK,CAACL,OAAO,GAAG,IAAI;MACpBK,KAAK,CAACJ,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDU,OAAO,CAACnB,UAAU,CAACqB,SAAS,EAAE,CAACR,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACL,OAAO,GAAG,KAAK;MACrBK,KAAK,CAACV,IAAI,GAAGW,MAAM,CAACE,OAAO;IAC7B,CAAC,CAAC,CACDG,OAAO,CAACnB,UAAU,CAACsB,QAAQ,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAK;MAC/CD,KAAK,CAACL,OAAO,GAAG,KAAK;MACrBK,KAAK,CAACJ,KAAK,GAAGK,MAAM,CAACL,KAAK,CAACc,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;;AAEF;AACA,eAAelB,UAAU,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}